{"version":3,"sources":["components/Navbar/index.js","components/Section/index.js","components/ResultList/index.js","components/ResultItem/index.js","utils/API.js","pages/Search.js","components/SavedItem/index.js","pages/Saved.js","pages/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["CustomNavBar","className","alignLinks","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","sidenav","class","to","Section","props","children","ResultList","ResultItem","href","book","volumeInfo","infoLink","target","onClick","e","classList","add","saveBook","title","authors","length","map","author","src","imageLinks","thumbnail","description","axios","get","delete","bookData","post","apiKey","require","S3","apiKeyHeroku","process","socket","io","Search","useEffect","on","bookName","document","querySelector","toastElement","window","M","Toast","getInstance","dismiss","toast","html","useState","books","setBooks","formObject","setFormObject","image","link","emit","API","s","icon","placeholder","onChange","event","value","search","preventDefault","then","response","console","log","data","items","alert","catch","error","SavedItem","deleteBook","Saved","savedBooks","setSavedBooks","loadBooks","res","err","_id","Home","alt","responsiveThreshold","App","exact","path","component","copyrights","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e826594a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { Navbar, NavItem, Icon } from 'react-materialize';\n\nexport default function CustomNavBar() {\n    return (\n        <div>\n             <Navbar\n            className=\"navbar\"\n            alignLinks=\"right\"\n            \n            id=\"mobile-nav\"\n            menuIcon={<Icon>menu</Icon>}\n            options={{\n                draggable: true,\n                edge: 'left',\n                inDuration: 250,\n                onCloseEnd: null,\n                onCloseStart: null,\n                onOpenEnd: null,\n                onOpenStart: null,\n                outDuration: 200,\n                preventScrolling: true\n            }}\n            sidenav={\n                <div className=\"left-align\">\n                <ul class=\"side-nav\" id=\"mobile-menu\">\n                    <li><Link to=\"/search\">Search for Books</Link></li>\n                    <li><Link to=\"/saved\">Saved Books</Link></li>\n                </ul>\n                </div>\n            }\n            >\n            <NavItem >\n                <Link to=\"/search\">Search for Books</Link>\n            </NavItem>\n            <NavItem>\n                <Link to=\"/saved\">Saved Books</Link>\n            </NavItem>\n        </Navbar>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Section(props) {\n    return (\n        <section class=\"section white\">\n            {props.children}\n        </section>\n    )\n}\n","import React from 'react'\n\nexport default function ResultList(props) {\n    return (\n        <ul className=\"collection\">\n            {props.children}\n        </ul>\n    )\n}\n","import React from 'react'\nimport {Button} from \"react-materialize\"\nimport \"./style.css\"\n\nexport default function ResultItem(props) {\n\n    // if save button pressed disable it\n    function processClickButton(e) {\n        e.target.classList.add('disabled')\n        props.saveBook(props.book.volumeInfo)\n    }\n\n    // lists authors depending on amount of authors\n    function renderAuthors(authors) {\n        if (!authors) {\n            return ('None')\n        }\n        else if (authors.length === 1) {\n            return (authors)\n        }\n        else {\n            return (\n                <ul>\n                    {authors.map(author => (\n                        <li>\n                            {author}\n                        </li>\n                    ))}\n                </ul>\n            )\n        }\n    }\n\n    return (\n        <li class=\"collection-item bookItem\">\n            <a href={props.book.volumeInfo.infoLink} target=\"_blank\"><Button className=\"right\" id=\"viewButton\">View</Button></a>\n            <Button className=\"right\" id=\"saveButton\" onClick={processClickButton}>Save</Button>\n            <h5>{props.book.volumeInfo.title}</h5>\n            <p className=\"writtenBy\">Written by: </p><p>{renderAuthors(props.book.volumeInfo.authors)}</p>\n            <img src={props.book.volumeInfo.imageLinks.thumbnail} className=\"left bookThumbnail\"></img>\n            <br></br>\n            <p>{props.book.volumeInfo.description}</p>\n        </li>\n    )\n}\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { TextInput, Row, Col, Button} from 'react-materialize';\nimport Section from \"../components/Section\"\nimport ResultList from \"../components/ResultList\"\nimport ResultItem from \"../components/ResultItem\"\nimport API from \"../utils/API\";\nimport io from 'socket.io-client'\nimport axios from \"axios\"\nconst aws = require('aws-sdk')\n\n\n\nlet s3 = new aws.S3({\n    apiKeyHeroku: process.env.apiKey\n})\nconst apiKey = s3.apiKeyHeroku || process.env.REACT_APP_API_KEY\nconst socket = io()\n\n\nfunction Search() {\n\n    useEffect(() => {\n        // listener for book saved and executes toast notification\n        socket.on('bookSavedNotification', (bookName) => {\n            if (document.querySelector('.toast')) {\n                const toastElement = document.querySelector('.toast');\n                const toastInstance = window.M.Toast.getInstance(toastElement)\n                toastInstance.dismiss()\n            }\n            window.M.toast({ html: `A new book titled '${bookName}' was saved!` })\n        })\n        // listener for book deleted and executes toast notification\n        socket.on('bookDeletedNotification', (bookName) => {\n            if (document.querySelector('.toast')) {\n                const toastElement = document.querySelector('.toast');\n                const toastInstance = window.M.Toast.getInstance(toastElement)\n                toastInstance.dismiss()\n            }\n            window.M.toast({ html: `A new book titled '${bookName}' was Deleted!` })\n          })\n    }, [])\n\n    const [books, setBooks] = useState([])\n    const [formObject, setFormObject] = useState([])\n\n    // Api call to Google Books when search button clicked\n    function searchForBook(book) {\n        axios.get(`https://www.googleapis.com/books/v1/volumes?q=${book}&key=${apiKey}`)\n        .then(response => {\n            console.log(response)\n            if (response.data.items.length === 0) {\n                alert('No results!')\n            }\n            else {\n                setBooks(response.data.items)\n            }\n        }).catch(error => console.log(error))\n    }\n\n    // set formObject state when user typing\n    function handleInputChange(event) {\n        const { value } = event.target;\n        setFormObject({...formObject, search: value})\n    };\n\n    // search for book using formObject state\n    function handleFormSubmit(event) {\n        event.preventDefault()\n        searchForBook(formObject.search)\n    }\n\n    // save book data to mongodb and emit notification that book saved\n    function saveBook(book, e) {\n        const bookData = {\n            authors: book.authors,\n            description: book.description,\n            image: book.imageLinks.thumbnail,\n            link: book.infoLink,\n            title: book.title\n        }\n        socket.emit('bookSavedNotification', (bookData.title))\n        API.saveBook(bookData)\n    }\n    \n    return (\n        <Section>\n            <Row className=\"container\">\n                <Col s={12}>\n                    <h2 className=\"center-align\">Search for Books</h2>\n                    <br></br>\n                    <TextInput\n                        icon=\"search\"\n                        placeholder=\"Search for Book\"\n                        onChange={handleInputChange}\n                        s={12}\n                     />\n                </Col>\n                <Col s={12}>\n                    <Button onClick={handleFormSubmit}>Search</Button>\n                </Col>\n            </Row>\n            <Row className=\"container\">\n                <Col s={12}>\n                    <ResultList>\n                        {books.map(book => (\n                          <ResultItem book={book} saveBook={saveBook}/>  \n                        ))}\n                    </ResultList>\n                </Col>\n            </Row>\n        </Section>\n\n    )\n\n}\n\nexport default Search;","import React from 'react'\nimport {Button} from \"react-materialize\"\nimport \"./style.css\"\n\n\n\nexport default function SavedItem(props) {\n\n    // lists authors depending on amount of authors\n    function renderAuthors(authors) {\n        if (authors.length === 0) {\n            return ('None')\n        }\n        else if (authors.length === 1) {\n            return (authors)\n        }\n        else {\n            return (\n                <ul>\n                    {authors.map(author => (\n                        <li>\n                            {author}\n                        </li>\n                    ))}\n                </ul>\n            )\n        }\n    }\n    \n    return (\n        <li class=\"collection-item bookItem\">\n            <a href={props.bookData.link} target=\"_blank\"><Button className=\"right\" id=\"viewButton\">View</Button></a>\n            <Button className=\"right\" id=\"deleteButton\" onClick={() => props.deleteBook(props.bookData)}>Delete</Button>\n            <h5>{props.bookData.title}</h5>\n            <p className=\"writtenBy\">Written by: </p><p>{renderAuthors(props.bookData.authors)}</p>\n            <img src={props.bookData.image} className=\"left bookThumbnail\"></img>\n            <br></br>\n            <p>{props.bookData.description}</p>\n            <br></br>\n            <br></br>\n            <br></br>\n        </li>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col } from 'react-materialize';\nimport Section from \"../components/Section\"\nimport ResultList from \"../components/ResultList\"\nimport SavedItem from \"../components/SavedItem\"\nimport API from \"../utils/API\"\nimport io from 'socket.io-client'\n\n\nconst socket = io()\n\nfunction Saved() {\n\n    const [savedBooks, setSavedBooks] = useState([])\n\n   useEffect(() => {\n        loadBooks()\n        // listener for book saved and executes toast notification\n        socket.on('bookSavedNotification', (bookName) => {\n            if (document.querySelector('.toast')) {\n                const toastElement = document.querySelector('.toast');\n                const toastInstance = window.M.Toast.getInstance(toastElement)\n                toastInstance.dismiss()\n            }\n            window.M.toast({ html: `A new book titled '${bookName}' was saved!` })\n            loadBooks()\n          })\n        // listener for book deleted and executes toast notification\n        socket.on('bookDeletedNotification', (bookName) => {\n            if (document.querySelector('.toast')) {\n                const toastElement = document.querySelector('.toast');\n                const toastInstance = window.M.Toast.getInstance(toastElement)\n                toastInstance.dismiss()\n            }\n            window.M.toast({ html: `A new book titled '${bookName}' was Deleted!` })\n        })\n   }, [])\n\n    // load list of books from mongodb\n   function loadBooks() {\n        API.getBooks().then(res => \n            setSavedBooks(res.data)\n        ).catch(err => console.log(err))\n   }\n    //  delete from mongodb then send emitter for toast notification\n   function deleteBook(bookData) {\n    socket.emit('bookDeletedNotification', (bookData.title))\n        API.deleteBook(bookData._id)\n        .then(res => loadBooks())\n        .catch(err => console.log(err))\n    }\n\n    return (\n        <Section>\n            <Row className=\"container\">\n                <Col s={12}>\n                    <h2 className=\"center-align\">Your Saved Books</h2>\n                    <br></br>\n                    <ResultList>\n                        {savedBooks.map(book => (\n                            <SavedItem bookData={book} deleteBook={deleteBook}/>\n                        ))}\n                    </ResultList>\n                </Col>\n            </Row>\n        </Section>\n    )\n\n}\n\nexport default Saved;","import React, { useEffect } from \"react\";\nimport { Row, Col, Button, Parallax } from 'react-materialize';\nimport Section from \"../components/Section\"\nimport io from 'socket.io-client'\n\nconst socket = io()\n\nfunction Home() {\n\n   useEffect(() => {\n        // listener for book saved and executes toast notification\n        socket.on('bookSavedNotification', (bookName) => {\n            if (document.querySelector('.toast')) {\n                const toastElement = document.querySelector('.toast');\n                const toastInstance = window.M.Toast.getInstance(toastElement)\n                toastInstance.dismiss()\n            }\n            window.M.toast({ html: `A new book titled '${bookName}' was saved!` })\n          })\n        // listener for book deleted and executes toast notification\n        socket.on('bookDeletedNotification', (bookName) => {\n            if (document.querySelector('.toast')) {\n                const toastElement = document.querySelector('.toast');\n                const toastInstance = window.M.Toast.getInstance(toastElement)\n                toastInstance.dismiss()\n            }\n            window.M.toast({ html: `A new book titled '${bookName}' was Deleted!` })\n        })\n   }, [])\n\n\n    return (\n        <div>\n             <Parallax\n                    image={<img alt=\"\" src=\"https://media.wired.com/photos/59268083cefba457b079a332/master/w_2560%2Cc_limit/BookTA-200552869-001.jpg\"/>}\n                    options={{\n                    responsiveThreshold: 0\n                    }}\n            />\n            <Section>\n                <Row className=\"container\">\n                    <Col s={12}>\n                        <h2 className=\"center-align\">Google Books Search</h2>\n                        <br></br>\n                    </Col>\n                </Row>\n                <Row className=\"container center-align\">\n                    <Col s={12}>\n                        <a href=\"/search\"><Button>Start!</Button></a>\n                        <br></br><br></br>\n                        <a href=\"/saved\"><Button>Saved Books</Button></a>\n                        <br></br><br></br>\n                    </Col>\n                </Row>\n            </Section>\n            <Parallax\n                    image={<img alt=\"\" src=\"https://cdn.cfr.org/sites/default/files/styles/full_width_xl/public/image/2015/10/Books_edited.jpg\"/>}\n                    options={{\n                    responsiveThreshold: 0\n                    }}\n            />\n        </div>\n    )\n\n}\n\nexport default Home;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Footer } from 'react-materialize';\nimport CustomNavBar from \"./components/Navbar\"\nimport Search from \"./pages/Search\"\nimport Saved from \"./pages/Saved\"\nimport Home from \"./pages/Home\"\nimport \"./style.css\"\nimport 'material-icons/iconfont/material-icons.css';\nimport 'materialize-css';\n\nfunction App() {\n\n  return (\n    <Router>\n    <div className=\"appParent\">\n      <CustomNavBar />\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/search\" component={Search} />\n      <Route exact path=\"/saved\" component={Saved} />\n      <Footer className=\"footer\"\n        copyrights=\"© 2021 Copyright Paul Vatterott\"\n\n      >\n        <h5 className=\"white-text\">\n          Powered By Google Books\n        </h5>\n        <a className=\"grey-text text-lighten-4\" href=\"https://github.com/pfvatterott\">\n          My Github\n        </a>\n        <br></br>\n        <a className=\"grey-text text-lighten-4\" href=\"https://paul-vatterott.com\">\n          My Portfolio\n        </a>\n      </Footer>\n    </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'materialize-css';\nimport 'materialize-css/dist/css/materialize.min.css'\nimport 'materialize-css/dist/js/materialize.min.js' \n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}